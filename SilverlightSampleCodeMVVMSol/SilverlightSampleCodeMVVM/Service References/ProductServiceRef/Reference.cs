//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SilverlightSampleCodeMVVM.ProductServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/SilverlightSampleCodeMVVM.WCF")]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        private double PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceRef.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        System.IAsyncResult BeginUpdateProduct(SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse EndUpdateProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProductService/GetProducts", ReplyAction="http://tempuri.org/IProductService/GetProductsResponse")]
        System.IAsyncResult BeginGetProducts(SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse EndGetProducts(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateProduct", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int productId;
        
        public UpdateProductRequest() {
        }
        
        public UpdateProductRequest(int productId) {
            this.productId = productId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateProductResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateProductResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateProductResult;
        
        public UpdateProductResponse() {
        }
        
        public UpdateProductResponse(bool UpdateProductResult) {
            this.UpdateProductResult = UpdateProductResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProducts", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProductsRequest {
        
        public GetProductsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProductsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<SilverlightSampleCodeMVVM.ProductServiceRef.Product> GetProductsResult;
        
        public GetProductsResponse() {
        }
        
        public GetProductsResponse(System.Collections.ObjectModel.ObservableCollection<SilverlightSampleCodeMVVM.ProductServiceRef.Product> GetProductsResult) {
            this.GetProductsResult = GetProductsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : SilverlightSampleCodeMVVM.ProductServiceRef.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<SilverlightSampleCodeMVVM.ProductServiceRef.IProductService>, SilverlightSampleCodeMVVM.ProductServiceRef.IProductService {
        
        private BeginOperationDelegate onBeginUpdateProductDelegate;
        
        private EndOperationDelegate onEndUpdateProductDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductsDelegate;
        
        private EndOperationDelegate onEndGetProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UpdateProductCompletedEventArgs> UpdateProductCompleted;
        
        public event System.EventHandler<GetProductsCompletedEventArgs> GetProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightSampleCodeMVVM.ProductServiceRef.IProductService.BeginUpdateProduct(SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProduct(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse SilverlightSampleCodeMVVM.ProductServiceRef.IProductService.EndUpdateProduct(System.IAsyncResult result) {
            return base.Channel.EndUpdateProduct(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductRequest request = ((SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductRequest)(inValues[0]));
            return ((SilverlightSampleCodeMVVM.ProductServiceRef.IProductService)(this)).BeginUpdateProduct(request, callback, asyncState);
        }
        
        private object[] OnEndUpdateProduct(System.IAsyncResult result) {
            SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse retVal = ((SilverlightSampleCodeMVVM.ProductServiceRef.IProductService)(this)).EndUpdateProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateProductCompleted(object state) {
            if ((this.UpdateProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProductCompleted(this, new UpdateProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProductAsync(SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductRequest request) {
            this.UpdateProductAsync(request, null);
        }
        
        public void UpdateProductAsync(SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductRequest request, object userState) {
            if ((this.onBeginUpdateProductDelegate == null)) {
                this.onBeginUpdateProductDelegate = new BeginOperationDelegate(this.OnBeginUpdateProduct);
            }
            if ((this.onEndUpdateProductDelegate == null)) {
                this.onEndUpdateProductDelegate = new EndOperationDelegate(this.OnEndUpdateProduct);
            }
            if ((this.onUpdateProductCompletedDelegate == null)) {
                this.onUpdateProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProductCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProductDelegate, new object[] {
                        request}, this.onEndUpdateProductDelegate, this.onUpdateProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightSampleCodeMVVM.ProductServiceRef.IProductService.BeginGetProducts(SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProducts(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse SilverlightSampleCodeMVVM.ProductServiceRef.IProductService.EndGetProducts(System.IAsyncResult result) {
            return base.Channel.EndGetProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsRequest request = ((SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsRequest)(inValues[0]));
            return ((SilverlightSampleCodeMVVM.ProductServiceRef.IProductService)(this)).BeginGetProducts(request, callback, asyncState);
        }
        
        private object[] OnEndGetProducts(System.IAsyncResult result) {
            SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse retVal = ((SilverlightSampleCodeMVVM.ProductServiceRef.IProductService)(this)).EndGetProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductsCompleted(object state) {
            if ((this.GetProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductsAsync(SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsRequest request) {
            this.GetProductsAsync(request, null);
        }
        
        public void GetProductsAsync(SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsRequest request, object userState) {
            if ((this.onBeginGetProductsDelegate == null)) {
                this.onBeginGetProductsDelegate = new BeginOperationDelegate(this.OnBeginGetProducts);
            }
            if ((this.onEndGetProductsDelegate == null)) {
                this.onEndGetProductsDelegate = new EndOperationDelegate(this.OnEndGetProducts);
            }
            if ((this.onGetProductsCompletedDelegate == null)) {
                this.onGetProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductsDelegate, new object[] {
                        request}, this.onEndGetProductsDelegate, this.onGetProductsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightSampleCodeMVVM.ProductServiceRef.IProductService CreateChannel() {
            return new ProductServiceClientChannel(this);
        }
        
        private class ProductServiceClientChannel : ChannelBase<SilverlightSampleCodeMVVM.ProductServiceRef.IProductService>, SilverlightSampleCodeMVVM.ProductServiceRef.IProductService {
            
            public ProductServiceClientChannel(System.ServiceModel.ClientBase<SilverlightSampleCodeMVVM.ProductServiceRef.IProductService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUpdateProduct(SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateProduct", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse EndUpdateProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse _result = ((SilverlightSampleCodeMVVM.ProductServiceRef.UpdateProductResponse)(base.EndInvoke("UpdateProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProducts(SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetProducts", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse EndGetProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse _result = ((SilverlightSampleCodeMVVM.ProductServiceRef.GetProductsResponse)(base.EndInvoke("GetProducts", _args, result)));
                return _result;
            }
        }
    }
}
